/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as FilmFilmIdImport } from './routes/film/$filmId'

// Create Virtual Routes

const TicketsLazyImport = createFileRoute('/tickets')()
const ProfileLazyImport = createFileRoute('/profile')()
const AuthLazyImport = createFileRoute('/auth')()

// Create/Update Routes

const TicketsLazyRoute = TicketsLazyImport.update({
  path: '/tickets',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tickets.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FilmFilmIdRoute = FilmFilmIdImport.update({
  path: '/film/$filmId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/tickets': {
      id: '/tickets'
      path: '/tickets'
      fullPath: '/tickets'
      preLoaderRoute: typeof TicketsLazyImport
      parentRoute: typeof rootRoute
    }
    '/film/$filmId': {
      id: '/film/$filmId'
      path: '/film/$filmId'
      fullPath: '/film/$filmId'
      preLoaderRoute: typeof FilmFilmIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthLazyRoute,
  ProfileLazyRoute,
  TicketsLazyRoute,
  FilmFilmIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/profile",
        "/tickets",
        "/film/$filmId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/tickets": {
      "filePath": "tickets.lazy.tsx"
    },
    "/film/$filmId": {
      "filePath": "film/$filmId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
